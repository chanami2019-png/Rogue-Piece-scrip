local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local VirtualUser = game:GetService("VirtualUser")
local VirtualInputManager = game:GetService("VirtualInputManager")

function CheckLevel()
    local lvl = game:GetService("Players").LocalPlayer.PlayerData.Level.Value
    if lvl >= 1 and lvl <= 49 then
        MonName = "Floppa"
        QuestName = "Floppa Quest 1"
        QuestTitle = "Floppa Quest 1"
    elseif lvl >= 50 then
        MonName = "Golden Floppa"
        QuestName = "Floppa Quest 2"
        QuestTitle = "Floppa Quest 2"
    end
end

task.spawn(function()
	while true do task.wait()
		pcall(function()
			local OnState = _G.AutoFarm 
			if not anticlip and OnState then
				for _, v in pairs(LocalPlayer.Character:GetChildren()) do
					if v:IsA("BasePart") then
						v.CanCollide = false
					end
				end
				if not LocalPlayer.Character.HumanoidRootPart:FindFirstChild("Velocity") then
					local v = Instance.new("BodyVelocity", LocalPlayer.Character.HumanoidRootPart)
					v.Name = "Velocity"
					v.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
					v.Velocity = Vector3.new(0, 0, 0)
				end
			else
				if LocalPlayer.Character.HumanoidRootPart:FindFirstChild("Velocity") then
					LocalPlayer.Character.HumanoidRootPart:FindFirstChild("Velocity"):Destroy()
				end
			end
		end)
	end
end)




local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()

local Window = Fluent:CreateWindow({
    Title = "Meme sea",
    SubTitle = "by Cxdnzy",
    TabWidth = 160,
    Size = UDim2.fromOffset(580, 460),
    Theme = "Amethyst",
    MinimizeKey = Enum.KeyCode.LeftControl -- Used when theres no MinimizeKeybind
})

-- Fluent provides Lucide Icons, they are optional
local Tabs = {
    Main = Window:AddTab({ Title = "Main", Icon = "bed" }),
    Teleport = Window:AddTab({ Title = "Teleport", Icon = "" }),
    Settings = Window:AddTab({ Title = "Settings", Icon = "settings" })
}

Window:SelectTab(1)

local FarmSection = Tabs.Main:AddSection("Farm")
local StatsSection = Tabs.Main:AddSection("Stat")

local DistanseSlider = FarmSection:AddSlider("DistanseSlider", 
{
    Title = "Select Distance",
    Description = "This is a Distance slider",
    Default = 8,
    Min = 0,
    Max = 50,
    Rounding = 0,
    Callback = function(v)
        Distance = v
    end
})

local Farm = FarmSection:AddToggle("FarmToggle", 
{
    Title = "Auto Farm", 
    Description = "",
    Default = false,
    Callback = function(state)
        _G.AutoFarm = state
        task.spawn(function()
            while _G.AutoFarm do task.wait()
                pcall(function()
                    CheckLevel()
                    for _,v in next, workspace.Monster:GetChildren() do
                        if v:IsA("Model") and v.Name == MonName and v.Humanoid.Health > 0 then
                            if game:GetService("Players").LocalPlayer.PlayerGui.QuestGui.Holder.QuestSlot1.Visible then
                                if game:GetService("Players").LocalPlayer.PlayerGui.QuestGui.Holder.QuestSlot1.QuestGiver.Text == QuestTitle then
                                    LocalPlayer.Character.HumanoidRootPart.CFrame = v.HumanoidRootPart.CFrame * CFrame.new(0,Distance,0) * CFrame.Angles(math.rad(-90),0,0)
                                    VirtualUser:Button1Down(Vector2.new(1e4, 1e4))
                                    VirtualUser:Button1Up(Vector2.new(1e4, 1e4))
                                else
                                    local args = {
                                        [1] = "Abandon_Quest",
                                        [2] = {
                                            ["QuestSlot"] = "QuestSlot1"
                                        }
                                    }
                                    game:GetService("ReplicatedStorage"):WaitForChild("OtherEvent"):WaitForChild("QuestEvents"):WaitForChild("Quest"):FireServer(unpack(args))
            
                                end
                            else
                                LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.Location.QuestLocaion:FindFirstChild(QuestName).CFrame
                                VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.E, false, LocalPlayer)
                                task.wait(0.01)
                                VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.E, false, LocalPlayer)
                            end
                        end
                    end
                end)
            end
        end)
	end
})




local StatsDropdown = StatsSection:AddDropdown("StatsDropdown", {
    Title = "Select Stats",
    Description = "",
    Values = {"MeleeLevel", "DefenseLevel", "SwordLevel", 'MemePowerLevel'},
    Multi = false,
    Default = "nil",
    Callback = function(c)
        SelectStat = c
    end
})


local Stats = StatsSection:AddToggle("StatsToggle", 
{
    Title = "Auto Stats", 
    Description = "",
    Default = false,
    Callback = function(state)
        _G.AutoUpStat = state
        task.spawn(function()
            while _G.AutoUpStat do task.wait()
                pcall(function()
                    local args = {
                        [1] = {
                            ["Target"] = SelectStat,
                            ["Action"] = "UpgradeStats",
                            ["Amount"] = 1
                        }
                    }
                    
                    game:GetService("ReplicatedStorage"):WaitForChild("OtherEvent"):WaitForChild("MainEvents"):WaitForChild("StatsFunction"):InvokeServer(unpack(args))

                end)
            end
        end)
	end
})



